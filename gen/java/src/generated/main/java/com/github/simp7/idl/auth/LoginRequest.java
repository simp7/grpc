// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto

package com.github.simp7.idl.auth;

/**
 * Protobuf type {@code auth.LoginRequest}
 */
public final class LoginRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:auth.LoginRequest)
    LoginRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LoginRequest.newBuilder() to construct.
  private LoginRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LoginRequest() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LoginRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.simp7.idl.auth.AuthProto.internal_static_auth_LoginRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.simp7.idl.auth.AuthProto.internal_static_auth_LoginRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.simp7.idl.auth.LoginRequest.class, com.github.simp7.idl.auth.LoginRequest.Builder.class);
  }

  private int methodCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object method_;
  public enum MethodCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TRADITIONAL(1),
    OAUTH(2),
    METHOD_NOT_SET(0);
    private final int value;
    private MethodCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MethodCase valueOf(int value) {
      return forNumber(value);
    }

    public static MethodCase forNumber(int value) {
      switch (value) {
        case 1: return TRADITIONAL;
        case 2: return OAUTH;
        case 0: return METHOD_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MethodCase
  getMethodCase() {
    return MethodCase.forNumber(
        methodCase_);
  }

  public static final int TRADITIONAL_FIELD_NUMBER = 1;
  /**
   * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
   * @return Whether the traditional field is set.
   */
  @java.lang.Override
  public boolean hasTraditional() {
    return methodCase_ == 1;
  }
  /**
   * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
   * @return The traditional.
   */
  @java.lang.Override
  public com.github.simp7.idl.auth.TraditionalLoginRequest getTraditional() {
    if (methodCase_ == 1) {
       return (com.github.simp7.idl.auth.TraditionalLoginRequest) method_;
    }
    return com.github.simp7.idl.auth.TraditionalLoginRequest.getDefaultInstance();
  }
  /**
   * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
   */
  @java.lang.Override
  public com.github.simp7.idl.auth.TraditionalLoginRequestOrBuilder getTraditionalOrBuilder() {
    if (methodCase_ == 1) {
       return (com.github.simp7.idl.auth.TraditionalLoginRequest) method_;
    }
    return com.github.simp7.idl.auth.TraditionalLoginRequest.getDefaultInstance();
  }

  public static final int OAUTH_FIELD_NUMBER = 2;
  /**
   * <code>.auth.OAuthLoginRequest oauth = 2;</code>
   * @return Whether the oauth field is set.
   */
  @java.lang.Override
  public boolean hasOauth() {
    return methodCase_ == 2;
  }
  /**
   * <code>.auth.OAuthLoginRequest oauth = 2;</code>
   * @return The oauth.
   */
  @java.lang.Override
  public com.github.simp7.idl.auth.OAuthLoginRequest getOauth() {
    if (methodCase_ == 2) {
       return (com.github.simp7.idl.auth.OAuthLoginRequest) method_;
    }
    return com.github.simp7.idl.auth.OAuthLoginRequest.getDefaultInstance();
  }
  /**
   * <code>.auth.OAuthLoginRequest oauth = 2;</code>
   */
  @java.lang.Override
  public com.github.simp7.idl.auth.OAuthLoginRequestOrBuilder getOauthOrBuilder() {
    if (methodCase_ == 2) {
       return (com.github.simp7.idl.auth.OAuthLoginRequest) method_;
    }
    return com.github.simp7.idl.auth.OAuthLoginRequest.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (methodCase_ == 1) {
      output.writeMessage(1, (com.github.simp7.idl.auth.TraditionalLoginRequest) method_);
    }
    if (methodCase_ == 2) {
      output.writeMessage(2, (com.github.simp7.idl.auth.OAuthLoginRequest) method_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (methodCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.github.simp7.idl.auth.TraditionalLoginRequest) method_);
    }
    if (methodCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.github.simp7.idl.auth.OAuthLoginRequest) method_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.simp7.idl.auth.LoginRequest)) {
      return super.equals(obj);
    }
    com.github.simp7.idl.auth.LoginRequest other = (com.github.simp7.idl.auth.LoginRequest) obj;

    if (!getMethodCase().equals(other.getMethodCase())) return false;
    switch (methodCase_) {
      case 1:
        if (!getTraditional()
            .equals(other.getTraditional())) return false;
        break;
      case 2:
        if (!getOauth()
            .equals(other.getOauth())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (methodCase_) {
      case 1:
        hash = (37 * hash) + TRADITIONAL_FIELD_NUMBER;
        hash = (53 * hash) + getTraditional().hashCode();
        break;
      case 2:
        hash = (37 * hash) + OAUTH_FIELD_NUMBER;
        hash = (53 * hash) + getOauth().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.simp7.idl.auth.LoginRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.simp7.idl.auth.LoginRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.simp7.idl.auth.LoginRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.simp7.idl.auth.LoginRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.simp7.idl.auth.LoginRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code auth.LoginRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:auth.LoginRequest)
      com.github.simp7.idl.auth.LoginRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.simp7.idl.auth.AuthProto.internal_static_auth_LoginRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.simp7.idl.auth.AuthProto.internal_static_auth_LoginRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.simp7.idl.auth.LoginRequest.class, com.github.simp7.idl.auth.LoginRequest.Builder.class);
    }

    // Construct using com.github.simp7.idl.auth.LoginRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (traditionalBuilder_ != null) {
        traditionalBuilder_.clear();
      }
      if (oauthBuilder_ != null) {
        oauthBuilder_.clear();
      }
      methodCase_ = 0;
      method_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.simp7.idl.auth.AuthProto.internal_static_auth_LoginRequest_descriptor;
    }

    @java.lang.Override
    public com.github.simp7.idl.auth.LoginRequest getDefaultInstanceForType() {
      return com.github.simp7.idl.auth.LoginRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.simp7.idl.auth.LoginRequest build() {
      com.github.simp7.idl.auth.LoginRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.simp7.idl.auth.LoginRequest buildPartial() {
      com.github.simp7.idl.auth.LoginRequest result = new com.github.simp7.idl.auth.LoginRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.simp7.idl.auth.LoginRequest result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.github.simp7.idl.auth.LoginRequest result) {
      result.methodCase_ = methodCase_;
      result.method_ = this.method_;
      if (methodCase_ == 1 &&
          traditionalBuilder_ != null) {
        result.method_ = traditionalBuilder_.build();
      }
      if (methodCase_ == 2 &&
          oauthBuilder_ != null) {
        result.method_ = oauthBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.simp7.idl.auth.LoginRequest) {
        return mergeFrom((com.github.simp7.idl.auth.LoginRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.simp7.idl.auth.LoginRequest other) {
      if (other == com.github.simp7.idl.auth.LoginRequest.getDefaultInstance()) return this;
      switch (other.getMethodCase()) {
        case TRADITIONAL: {
          mergeTraditional(other.getTraditional());
          break;
        }
        case OAUTH: {
          mergeOauth(other.getOauth());
          break;
        }
        case METHOD_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTraditionalFieldBuilder().getBuilder(),
                  extensionRegistry);
              methodCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getOauthFieldBuilder().getBuilder(),
                  extensionRegistry);
              methodCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int methodCase_ = 0;
    private java.lang.Object method_;
    public MethodCase
        getMethodCase() {
      return MethodCase.forNumber(
          methodCase_);
    }

    public Builder clearMethod() {
      methodCase_ = 0;
      method_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.simp7.idl.auth.TraditionalLoginRequest, com.github.simp7.idl.auth.TraditionalLoginRequest.Builder, com.github.simp7.idl.auth.TraditionalLoginRequestOrBuilder> traditionalBuilder_;
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     * @return Whether the traditional field is set.
     */
    @java.lang.Override
    public boolean hasTraditional() {
      return methodCase_ == 1;
    }
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     * @return The traditional.
     */
    @java.lang.Override
    public com.github.simp7.idl.auth.TraditionalLoginRequest getTraditional() {
      if (traditionalBuilder_ == null) {
        if (methodCase_ == 1) {
          return (com.github.simp7.idl.auth.TraditionalLoginRequest) method_;
        }
        return com.github.simp7.idl.auth.TraditionalLoginRequest.getDefaultInstance();
      } else {
        if (methodCase_ == 1) {
          return traditionalBuilder_.getMessage();
        }
        return com.github.simp7.idl.auth.TraditionalLoginRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     */
    public Builder setTraditional(com.github.simp7.idl.auth.TraditionalLoginRequest value) {
      if (traditionalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        method_ = value;
        onChanged();
      } else {
        traditionalBuilder_.setMessage(value);
      }
      methodCase_ = 1;
      return this;
    }
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     */
    public Builder setTraditional(
        com.github.simp7.idl.auth.TraditionalLoginRequest.Builder builderForValue) {
      if (traditionalBuilder_ == null) {
        method_ = builderForValue.build();
        onChanged();
      } else {
        traditionalBuilder_.setMessage(builderForValue.build());
      }
      methodCase_ = 1;
      return this;
    }
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     */
    public Builder mergeTraditional(com.github.simp7.idl.auth.TraditionalLoginRequest value) {
      if (traditionalBuilder_ == null) {
        if (methodCase_ == 1 &&
            method_ != com.github.simp7.idl.auth.TraditionalLoginRequest.getDefaultInstance()) {
          method_ = com.github.simp7.idl.auth.TraditionalLoginRequest.newBuilder((com.github.simp7.idl.auth.TraditionalLoginRequest) method_)
              .mergeFrom(value).buildPartial();
        } else {
          method_ = value;
        }
        onChanged();
      } else {
        if (methodCase_ == 1) {
          traditionalBuilder_.mergeFrom(value);
        } else {
          traditionalBuilder_.setMessage(value);
        }
      }
      methodCase_ = 1;
      return this;
    }
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     */
    public Builder clearTraditional() {
      if (traditionalBuilder_ == null) {
        if (methodCase_ == 1) {
          methodCase_ = 0;
          method_ = null;
          onChanged();
        }
      } else {
        if (methodCase_ == 1) {
          methodCase_ = 0;
          method_ = null;
        }
        traditionalBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     */
    public com.github.simp7.idl.auth.TraditionalLoginRequest.Builder getTraditionalBuilder() {
      return getTraditionalFieldBuilder().getBuilder();
    }
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     */
    @java.lang.Override
    public com.github.simp7.idl.auth.TraditionalLoginRequestOrBuilder getTraditionalOrBuilder() {
      if ((methodCase_ == 1) && (traditionalBuilder_ != null)) {
        return traditionalBuilder_.getMessageOrBuilder();
      } else {
        if (methodCase_ == 1) {
          return (com.github.simp7.idl.auth.TraditionalLoginRequest) method_;
        }
        return com.github.simp7.idl.auth.TraditionalLoginRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.auth.TraditionalLoginRequest traditional = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.simp7.idl.auth.TraditionalLoginRequest, com.github.simp7.idl.auth.TraditionalLoginRequest.Builder, com.github.simp7.idl.auth.TraditionalLoginRequestOrBuilder> 
        getTraditionalFieldBuilder() {
      if (traditionalBuilder_ == null) {
        if (!(methodCase_ == 1)) {
          method_ = com.github.simp7.idl.auth.TraditionalLoginRequest.getDefaultInstance();
        }
        traditionalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.simp7.idl.auth.TraditionalLoginRequest, com.github.simp7.idl.auth.TraditionalLoginRequest.Builder, com.github.simp7.idl.auth.TraditionalLoginRequestOrBuilder>(
                (com.github.simp7.idl.auth.TraditionalLoginRequest) method_,
                getParentForChildren(),
                isClean());
        method_ = null;
      }
      methodCase_ = 1;
      onChanged();
      return traditionalBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.simp7.idl.auth.OAuthLoginRequest, com.github.simp7.idl.auth.OAuthLoginRequest.Builder, com.github.simp7.idl.auth.OAuthLoginRequestOrBuilder> oauthBuilder_;
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     * @return Whether the oauth field is set.
     */
    @java.lang.Override
    public boolean hasOauth() {
      return methodCase_ == 2;
    }
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     * @return The oauth.
     */
    @java.lang.Override
    public com.github.simp7.idl.auth.OAuthLoginRequest getOauth() {
      if (oauthBuilder_ == null) {
        if (methodCase_ == 2) {
          return (com.github.simp7.idl.auth.OAuthLoginRequest) method_;
        }
        return com.github.simp7.idl.auth.OAuthLoginRequest.getDefaultInstance();
      } else {
        if (methodCase_ == 2) {
          return oauthBuilder_.getMessage();
        }
        return com.github.simp7.idl.auth.OAuthLoginRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     */
    public Builder setOauth(com.github.simp7.idl.auth.OAuthLoginRequest value) {
      if (oauthBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        method_ = value;
        onChanged();
      } else {
        oauthBuilder_.setMessage(value);
      }
      methodCase_ = 2;
      return this;
    }
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     */
    public Builder setOauth(
        com.github.simp7.idl.auth.OAuthLoginRequest.Builder builderForValue) {
      if (oauthBuilder_ == null) {
        method_ = builderForValue.build();
        onChanged();
      } else {
        oauthBuilder_.setMessage(builderForValue.build());
      }
      methodCase_ = 2;
      return this;
    }
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     */
    public Builder mergeOauth(com.github.simp7.idl.auth.OAuthLoginRequest value) {
      if (oauthBuilder_ == null) {
        if (methodCase_ == 2 &&
            method_ != com.github.simp7.idl.auth.OAuthLoginRequest.getDefaultInstance()) {
          method_ = com.github.simp7.idl.auth.OAuthLoginRequest.newBuilder((com.github.simp7.idl.auth.OAuthLoginRequest) method_)
              .mergeFrom(value).buildPartial();
        } else {
          method_ = value;
        }
        onChanged();
      } else {
        if (methodCase_ == 2) {
          oauthBuilder_.mergeFrom(value);
        } else {
          oauthBuilder_.setMessage(value);
        }
      }
      methodCase_ = 2;
      return this;
    }
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     */
    public Builder clearOauth() {
      if (oauthBuilder_ == null) {
        if (methodCase_ == 2) {
          methodCase_ = 0;
          method_ = null;
          onChanged();
        }
      } else {
        if (methodCase_ == 2) {
          methodCase_ = 0;
          method_ = null;
        }
        oauthBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     */
    public com.github.simp7.idl.auth.OAuthLoginRequest.Builder getOauthBuilder() {
      return getOauthFieldBuilder().getBuilder();
    }
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     */
    @java.lang.Override
    public com.github.simp7.idl.auth.OAuthLoginRequestOrBuilder getOauthOrBuilder() {
      if ((methodCase_ == 2) && (oauthBuilder_ != null)) {
        return oauthBuilder_.getMessageOrBuilder();
      } else {
        if (methodCase_ == 2) {
          return (com.github.simp7.idl.auth.OAuthLoginRequest) method_;
        }
        return com.github.simp7.idl.auth.OAuthLoginRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.auth.OAuthLoginRequest oauth = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.simp7.idl.auth.OAuthLoginRequest, com.github.simp7.idl.auth.OAuthLoginRequest.Builder, com.github.simp7.idl.auth.OAuthLoginRequestOrBuilder> 
        getOauthFieldBuilder() {
      if (oauthBuilder_ == null) {
        if (!(methodCase_ == 2)) {
          method_ = com.github.simp7.idl.auth.OAuthLoginRequest.getDefaultInstance();
        }
        oauthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.simp7.idl.auth.OAuthLoginRequest, com.github.simp7.idl.auth.OAuthLoginRequest.Builder, com.github.simp7.idl.auth.OAuthLoginRequestOrBuilder>(
                (com.github.simp7.idl.auth.OAuthLoginRequest) method_,
                getParentForChildren(),
                isClean());
        method_ = null;
      }
      methodCase_ = 2;
      onChanged();
      return oauthBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:auth.LoginRequest)
  }

  // @@protoc_insertion_point(class_scope:auth.LoginRequest)
  private static final com.github.simp7.idl.auth.LoginRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.simp7.idl.auth.LoginRequest();
  }

  public static com.github.simp7.idl.auth.LoginRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LoginRequest>
      PARSER = new com.google.protobuf.AbstractParser<LoginRequest>() {
    @java.lang.Override
    public LoginRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LoginRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LoginRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.simp7.idl.auth.LoginRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

